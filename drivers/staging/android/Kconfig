menu "Android"

config ANDROID
	bool "Android Drivers"
	default N
	---help---
	  Enable support for various drivers needed on the Android platform

if ANDROID

config ASHMEM
	bool "Enable the Anonymous Shared Memory Subsystem"
	default n
	depends on SHMEM
	---help---
	  The ashmem subsystem is a new shared memory allocator, similar to
	  POSIX SHM but with different behavior and sporting a simpler
	  file-based API.

	  It is, in theory, a good memory allocator for low-memory devices,
	  because it can discard shared memory units when under memory pressure.

config ANDROID_LOGGER
	tristate "Android log driver"
	default n
	---help---
	  This adds support for system-wide logging using four log buffers.

	  These are:

	      1: main
	      2: events
	      3: radio
	      4: system

	  Log reading and writing is performed via normal Linux reads and
	  optimized writes. This optimization avoids logging having too
	  much overhead in the system.

config ANDROID_TIMED_OUTPUT
	bool "Timed output class driver"
	default y

config ANDROID_TIMED_GPIO
	tristate "Android timed gpio driver"
	depends on GPIOLIB && ANDROID_TIMED_OUTPUT
	default n

config ANDROID_LOW_MEMORY_KILLER
	bool "Android Low Memory Killer"
	default N
	---help---
	  Registers processes to be killed when memory is low

config ANDROID_LOW_MEMORY_KILLER_ADJUST_SCORE_ADJ
	bool "Android Low Memory Killer: Adjust min_score_adj to swap usage"
	depends on ANDROID_LOW_MEMORY_KILLER && ZRAM && !RUNTIME_COMPCACHE
	default y
	---help---
	  Increases LMK's min_score_adj along with the zram swap usage
	  (zram_score_adj)

	  zram_score_adj is defined to be the percentage of the swaps' or zram's
	  free space expressed in 0 to OOM_SCORE_ADJ_MAX (e.g. 100% is 1000, 12%
	  is 120).

	  The new min_score_adj is adjusted by the following heuristic:
	  1. A lmk_lowmem_threshold_adj tunable is introduced.

	  When zram_score_adj is greater than that, min_score_adj is not changed.

	  2. A preferred zone is chosen (usually node 0) and its number of free
	  pages is checked against the min watermark plus some arbitrary
	  number of pages specified by a new tunable zone_wmark_ok_safe_gap.

	  If there are more free pages, min_score_adj is set to the average
	  of the zram_score_adj and min_score_adj itself.

	  3. If neither of the two cases fit the scenario, just abort the whole
	  shrinker routine IF AND ONLY IF min_score_adj < zram_score_adj

	  4. If none of the above cases satisfy,
	  Make it so that min_score_adj := zram_score_adj

	  Obviously, the #4 would penalize everyone not using a swap and
	  would probably kill off apps the Android System doesn't want to kill yet.

	  Say N.

config ANDROID_LOW_MEMORY_KILLER_AUTODETECT_OOM_ADJ_VALUES
	bool "Android Low Memory Killer: detect oom_adj values"
	depends on ANDROID_LOW_MEMORY_KILLER
	default y
	---help---
	  Detect oom_adj values written to
	  /sys/module/lowmemorykiller/parameters/adj and convert them
	  to oom_score_adj values.

	  Enable this if lmkd sets the adj values from -17 to 16 instead of
	  the -1000 to 1000 scores. This tells LMK that the values has to be
	  converted regardless. This should also allow setting using the
	  oom_score_adj.

	  However setting values from -17 to 16 would cause some inaccuracies.

	  Say Y for Android 4 and below.

	  It's still safe to say Y otherwise. Even if the system lmkd
	  does use oom_score_adj right of the bat, it's highly unlikely
	  that it will use the values from -17 to 16.

config ANDROID_LOW_MEMORY_KILLER_ZRAM_OOM_SCORE_ADJ
	bool "Android Low Memory Killer: zram_score_adj in terms of oom_score_adj not oom_adj"
	depends on !ANDROID_LOW_MEMORY_KILLER_AUTODETECT_OOM_ADJ_VALUES
	default y
	help
	  On newer android versions, it the values written to
	  /sys/module/lowmemorykiller/parameters/adj may be of oom_score_adj
	  not oom_adj.

	  If that's the case, you may want to say Y to have the
	  zram adj calculation be in oom_score_adj instead of oom_adj.


config ANDROID_INTF_ALARM_DEV
	bool "Android alarm driver"
	depends on RTC_CLASS
	default n
	---help---
	  Provides non-wakeup and rtc backed wakeup alarms based on rtc or
	  elapsed realtime, and a non-wakeup alarm on the monotonic clock.
	  Also exports the alarm interface to user-space.

config SEC_OOM_KILLER
	bool "Android OOM Killer"
	default n
	help
	  klaatu@samsung
	  This enables 'Android-Style oom-killer'
	  The way to select victim by oom-killer provided by
	  linux kernel is totally different from android policy.
	  Hence, it makes more sense that we select the oom victim
	  as android does when LMK is invoked.

config SEC_DEBUG_LMK_MEMINFO
	bool "Show Meminfo when lmk invoked"
	default n
	help
	  Show memory information when lmk kills process

config SEC_DEBUG_LMK_COUNT_INFO
	bool "Record LMK execution count"
	default n
	help
	  Show LMK execution count information when lmk invoked

config SYNC
	bool "Synchronization framework"
	default n
	select ANON_INODES
	help
	  This option enables the framework for synchronization between multiple
	  drivers.  Sync implementations can take advantage of hardware
	  synchronization built into devices like GPUs.

config SW_SYNC
	bool "Software synchronization objects"
	default n
	depends on SYNC
	help
	  A sync object driver that uses a 32bit counter to coordinate
	  syncrhronization.  Useful when there is no hardware primitive backing
	  the synchronization.

config SW_SYNC_USER
	bool "Userspace API for SW_SYNC"
	default n
	depends on SW_SYNC
	help
	  Provides a user space API to the sw sync object.
	  *WARNING* improper use of this can result in deadlocking kernel
	  drivers from userspace.

config RUNTIME_COMPCACHE
	bool "Android rtcc v3"
	depends on ZRAM && ANDROID
	default n
	help
	  This option enables rtcc v3 for android

config KSWAPD_NOSWAP
	bool "Disable swap in kswapd"
	depends on RUNTIME_COMPCACHE
	default n
	help
	  This option controls swap action in kswapd

source "drivers/staging/android/fiq_debugger/Kconfig"

endif # if ANDROID

endmenu
